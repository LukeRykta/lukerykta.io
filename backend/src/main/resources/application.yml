spring:
  application:
    name: lukerykta-io
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.format_sql: true
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

server:
  # Use 'framework' if you deploy behind a proxy/CDN so {baseUrl} is correct.
  forward-headers-strategy: framework
---
# DEV
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${DB_URL_DEV}
    username: ${DB_USER_DEV}
    password: ${DB_PASS_DEV}
    hikari:
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
---
# PROD
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASS}
    hikari:
      maximum-pool-size: 30
      minimum-idle: 5
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  flyway:
    clean-disabled: true
---
# OAUTH2 (applies to all profiles)
app:
  cors:
    allowed-origins:
      - http://localhost:4200
      - https://lukerykta.io
  frontend:
    url: http://localhost:4200

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}     # leave default blank OK
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope: openid, profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          github:
            client-id: ${GITHUB_CLIENT_ID}      # no default => fail fast if missing
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: read:user, user:email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        # No 'provider:' block needed unless you override endpoints
